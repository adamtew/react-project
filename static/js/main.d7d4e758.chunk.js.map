{"version":3,"sources":["screens/Welcome/header.png","lib/theme.js","styles.js","screens/Welcome/styles.js","components/Button/styles.js","components/Button/index.js","components/Checkmark/index.js","screens/Welcome/index.js","screens/InstitutionSearch/styles.js","screens/InstitutionSearch/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","THEME","Container","styled","div","Modal","Screen","Header","h1","Note","List","ListItem","ListItemMark","ListItemContent","Header2","h3","P","p","Action","Button","primary","children","to","style","textDecoration","defaultProps","Checkmark","xmlns","fill","width","height","viewBox","d","Welcome","src","HeaderImage","alt","ScreenTop","SearchBox","input","Tray","ListItemIcon","data","InstitutionSearch","placeholder","map","item","App","render","location","exact","path","component","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7d4e758.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.d841ee77.png\";","export const THEME = {\n  PRIMARY_1: '#4B39EF',\n  SECONDARY: '#FFFFFF',\n  TEXT_PRIMARY: '#FFFFFF',\n  PLACEHOLDER: 'gray'\n}\n\nexport const LAYOUT = {\n\n}\n","import styled from 'styled-components'\nimport { THEME } from './lib/theme'\n\nexport const Container = styled.div`\n  display: flex;\n  background: ${THEME.PRIMARY_1};\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  position: relative;\n`\n\nexport const Modal = styled.div`\n  flex: 0 0 auto;\n  margin: auto;\n  width: 375px;\n  height: 812px;\n  position: relative;\n  overflow: scroll;\n`\n","import styled from 'styled-components';\nimport { THEME } from '../../lib/theme';\n\nexport const Screen = styled.div`\n  background-color: ${THEME.PRIMARY_1};\n  position: relative;\n  padding: 60px 35px;\n`\n\nexport const TopImage = styled.div`\n  background: ${THEME.PLACEHOLDER};\n  height: 100px;\n  width: 100%;\n`\n\nexport const Header = styled.h1`\n  color: ${THEME.TEXT_PRIMARY};\n  margin: 57px 0 0 0;\n  font-size: 32px;\n  font-weight: bold;\n  line-height: 38px;\n`\n\nexport const Note = styled.div`\n  margin: 30px 0 0 0;\n\tfont-size: 18px;\n\tline-height: 22px;\n  color: ${THEME.TEXT_PRIMARY};\n`\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 6px;\n`\n\nexport const ListItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 35px;\n`\n\nexport const ListItemMark = styled.div`\n  display: flex;\n`\n\nexport const ListItemContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${THEME.TEXT_PRIMARY};\n  margin: 0 0 0 12px;\n`\n\nexport const Header2 = styled.h3`\n  margin: 0 0 0 0;\n\tfont-size: 16px;\n\tfont-weight: bold;\n\tline-height: 19px;\n  color: ${THEME.TEXT_PRIMARY};\n`\n\nexport const P = styled.p`\n  margin: 4px 0 0 0;\n\topacity: 0.8;\n\tfont-size: 16px;\n\tfont-weight: 500;\n\tline-height: 19px;\n`\n\nexport const Action = styled.div`\n  margin-top: 187px;\n`\n","import styled from 'styled-components';\nimport { THEME } from '../../lib/theme';\n\nexport const Button = styled.div`\n  background: ${({ primary }) => primary ? THEME.PRIMARY_1 : THEME.SECONDARY}\n  border-radius: 15px;\n  color: ${({ primary }) => primary ? THEME.SECONDARY : THEME.PRIMARY_1}\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n\n\tfont-size: 16px;\n\tfont-weight: 500;\n\tline-height: 19px;\n`\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { Button as StyledButton } from './styles';\n\nconst Button = ({ children, to, primary }) => <>\n  <Link to={to} style={{textDecoration: 'none'}}>\n    <StyledButton primary={primary}>\n      {children}\n    </StyledButton>\n  </Link>\n</>\n\nButton.propTypes = {\n  primary: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  primary: true,\n};\n\nexport { Button };\n","import React from 'react';\n\nexport const Checkmark = () =>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"white\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n    <path d=\"M21.856 10.303c.086.554.144 1.118.144 1.697 0 6.075-4.925 11-11 11s-11-4.925-11-11 4.925-11 11-11c2.347 0 4.518.741 6.304 1.993l-1.422 1.457c-1.408-.913-3.082-1.45-4.882-1.45-4.962 0-9 4.038-9 9s4.038 9 9 9c4.894 0 8.879-3.928 8.99-8.795l1.866-1.902zm-.952-8.136l-9.404 9.639-3.843-3.614-3.095 3.098 6.938 6.71 12.5-12.737-3.096-3.096z\"/>\n</svg>\n","import React from 'react';\n\nimport {\n  Action,\n  Screen,\n  Header,\n  Header2,\n  List,\n  ListItem,\n  P,\n  ListItemMark,\n  Note,\n  ListItemContent,\n} from './styles';\n\nimport { Button, Checkmark } from '../../components';\n\nimport HeaderImage from './header.png';\n\nexport const Welcome = () => <Screen>\n  <div>\n    <img\n      width=\"100%\"\n      src={HeaderImage}\n      alt=\"Shield and credit cards\"\n    />\n  </div>\n  <Header>\n    Hi, Jane!\n  </Header>\n\n  <Note>\n    Canopy CU uses Atomic to transfer your card balance over.\n  </Note>\n\n  <List>\n    <ListItem>\n      <ListItemMark>\n        <Checkmark />\n      </ListItemMark>\n      <ListItemContent>\n        <Header2>\n          Secure\n        </Header2>\n        <P>\n          Your data is always encrypted, end to end.\n        </P>\n      </ListItemContent>\n    </ListItem>\n\n    <ListItem>\n      <ListItemMark>\n        <Checkmark />\n      </ListItemMark>\n      <ListItemContent>\n        <Header2>\n          Quick\n        </Header2>\n        <P>\n          Atomic will find the fastest way to make your transfer.\n        </P>\n      </ListItemContent>\n    </ListItem>\n  </List>\n  <Action>\n    <Button \n      to=\"/institution-search\"\n      primary={false}\n    >\n      Continue\n    </Button>\n  </Action>\n</Screen>\n","import styled from 'styled-components'\nimport { THEME } from '../../lib/theme'\n\nexport const Screen = styled.div`\n  background-color: ${THEME.PRIMARY_1};\n`\n\nexport const ScreenTop = styled.div`\n  padding: 0 25px;\n`\n\nexport const Header = styled.h3`\n  margin: 69px 0 20px 0;\n  color: ${THEME.SECONDARY};\n\tfont-size: 20px;\n\tfont-weight: bold;\n\tline-height: 24px;\n`\n\nexport const SearchBox = styled.input`\n  width: calc(100% - 43px);\n  margin: 0 0 30px 0;\n  height: 20px;\n  padding: 15px 0 15px 43px;\n  background-color: #2819AC;\n  border-radius: 15px;\n  border: none;\n\n  color: rgba(255, 255, 255, 0.5);\n\tfont-size: 16px;\n\tline-height: 19px;\n\n  &:after {\n    content: 'asldkfj';\n  }\n`\n\nexport const Tray = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: white;\n  padding: 22px 25px 20px 25px;\n  border-radius: 15px 15px 0 0;\n`\n\nexport const List = styled.div`\n  margin: 0 0 12px 0;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const ListItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 12px 0;\n  list-style: none;\n`\n\nexport const ListItemIcon = styled.div`\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  background: ${THEME.PLACEHOLDER};\n  margin: 0 15px 0 0;\n\n`\n\nexport const ListItemContent = styled.div`\n  display: flex;\n  align-items: center;\n\n\tcolor: #002251;\n\tfont-size: 16px;\n\tline-height: 19px;\n`\n\nexport const Button = styled.div`\n  width: 100%;\n  border-radius: 15px;\n  padding: 10px;\n  background: ${THEME.PRIMARY_1};\n  color: ${THEME.SECONDARY};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n\n\tfont-size: 16px;\n\tfont-weight: 500;\n\tline-height: 19px;\n`\n","import React from 'react'\nimport {\n  Screen,\n  Header,\n  SearchBox,\n  List,\n  ListItem,\n  Tray,\n  ListItemIcon,\n  ListItemContent,\n  ScreenTop\n} from './styles';\n\nimport { Button } from '../../components';\n\nconst data = [\n  'Chase',\n  'Wells Fargo',\n  'USAA',\n  'Bank of America',\n  'American Express',\n  'TD Bank',\n  'US Bank'\n];\n\nconst renderListItems = (items) => items.map(item =>\n  <ListItem>\n    <ListItemIcon>\n    </ListItemIcon>\n    <ListItemContent>\n      {item}\n    </ListItemContent>\n  </ListItem>\n)\n\nexport const InstitutionSearch = () => <Screen>\n  <ScreenTop>\n    <Header>\n      Where is your current balance?\n    </Header>\n    <SearchBox placeholder=\"Company name\" />\n  </ScreenTop>\n\n  <Tray>\n\n    <List>\n      {renderListItems(data)}\n    </List>\n\n      <Button to=\"/welcome\">\n        Next\n      </Button>\n\n  </Tray>\n</Screen>\n","import React from 'react';\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom'\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\nimport './App.css'\n\nimport {\n  Container,\n  Modal,\n} from './styles'\n\nimport { Welcome, InstitutionSearch } from './screens';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Route render={ ({ location }) => (\n        <Container>\n          <Modal>\n              <Switch location={location}>\n                <Route exact path=\"/welcome\" component={Welcome} />\n                <Route exact path=\"/institution-search\" component={InstitutionSearch} />\n                <Route render={() => <div>Not Found</div>} />\n\n              </Switch>\n        </Modal>\n      </Container>\n  )}/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}